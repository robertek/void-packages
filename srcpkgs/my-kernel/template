pkgname=my-kernel
version=6.6.32
_zfs_version=2.2.4
revision=2

license="GPL-2.0-only"
maintainer="Robert David"
short_desc="Basic kernel with built-in ZFS support"
homepage="https://www.kernel.org"

# base release
distfiles="${KERNEL_SITE}/kernel/v${version%%.*}.x/linux-${version%.*}.tar.xz"
# patch release
distfiles+=" ${KERNEL_SITE}/kernel/v${version%%.*}.x/patch-${version}.xz"
# zfs
distfiles+=" https://github.com/openzfs/zfs/releases/download/zfs-${_zfs_version}/zfs-${_zfs_version}.tar.gz"
skip_extraction="patch-${version}.xz"

# base relese
checksum="d926a06c63dd8ac7df3f86ee1ffc2ce2a3b81a2d168484e76b5b389aba8e56d0"
# patch release
checksum+=" a8e2ed9d5437d4c4abeb2d2c4d3aea7f4ab3c0741bf3c95fd587ed5f30815f94"
# zfs
checksum+=" 9790905f7683d41759418e1ef3432828c31116654ff040e91356ff1c21c31ec0"

archs="x86_64*"

nodebug=yes
nostrip=yes
noverifyrdeps=yes
noshlibprovides=yes
preserve=yes

hostmakedepends="tar elfutils-devel gmp-devel kmod libmpc-devel
 openssl-devel perl uboot-mkimage cpio pahole python3 zstd base-devel
 pam-devel zlib-devel libuuid-devel libblkid-devel libtirpc-devel attr-devel
 linux-firmware-intel lz4 ncurses-devel wireless-regdb"

_kernver="${version}_${revision}"
triggers="kernel-hooks"
kernel_hooks_version="${_kernver}"

_linux_path="${XBPS_BUILDDIR}/${pkgname}-${version}/linux-${version%.*}"
_zfs_path="${XBPS_BUILDDIR}/${pkgname}-${version}/zfs-${_zfs_version}"

pre_patch() {
	cd ${_linux_path}/
	xzcat $XBPS_SRCDISTDIR/$pkgname-$version/patch-${version}.xz | patch -sNp1 -F0
}

do_configure() {
	cd ${_linux_path}/
	cp -f ${FILESDIR}/config-base .config
	make ${makejobs} olddefconfig
	make ${makejobs} prepare

	cd ${_zfs_path}
	./autogen.sh
	./configure --with-linux=${_linux_path} --with-linux-obj=${_linux_path} --enable-linux-builtin
	./copy-builtin ${_linux_path}

	cd ${_linux_path}
	cp -f ${FILESDIR}/config-base .config
	make ${makejobs} olddefconfig

	# Always use our revision to CONFIG_LOCALVERSION to match our pkg version.
	sed -i -e "s|^\(CONFIG_LOCALVERSION=\).*|\1\"_${revision}\"|" .config
}

do_build() {
	cd ${_linux_path}
	export LDFLAGS=
	make ${makejobs} bzImage modules
}

do_install() {
	vmkdir usr/lib
	ln -s usr/lib ${DESTDIR}

	cd ${_linux_path}

	vinstall .config 644 boot config-${_kernver}
	vinstall System.map 644 boot System.map-${_kernver}
	vinstall arch/x86/boot/bzImage 644 boot vmlinuz-${_kernver}

	make ${makejobs} INSTALL_MOD_PATH=${DESTDIR} modules_install

	# Extract debugging symbols
	msg_normal "$pkgver: striping debug info\n"
	(
	cd ${DESTDIR}
	find ./ -name '*.ko' -print0 | \
		xargs -0r -n1 -P ${XBPS_MAKEJOBS} /usr/bin/$STRIP --strip-debug
	)
	depmod -b ${DESTDIR}/usr -F System.map ${_kernver}

	rm -f ${DESTDIR}/lib
}
